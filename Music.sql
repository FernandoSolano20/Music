-- MySQL Script generated by MySQL Workbench
-- Mon Dec 16 07:39:57 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Music
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Music
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Music` DEFAULT CHARACTER SET utf8 ;
USE `Music` ;

-- -----------------------------------------------------
-- Table `Music`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`User` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `yearsOld` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `userName` VARCHAR(45) NULL,
  `image` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `firstTime` TINYINT NULL,
  `randomPass` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Gender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Gender` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Compositor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Compositor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `old` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Artist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `born` DATE NOT NULL,
  `dead` DATE NULL,
  `country` VARCHAR(45) NOT NULL,
  `old` INT NOT NULL,
  `reference` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `idGender` INT NOT NULL,
  `artistName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Artist_Gender_idx` (`idGender` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_Gender`
    FOREIGN KEY (`idGender`)
    REFERENCES `Music`.`Gender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Album` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `releaseDate` DATE NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `releaseDay` DATE NOT NULL,
  `score` INT NOT NULL,
  `idGender` INT NOT NULL,
  `idCompositor` INT NOT NULL,
  `idArtist` INT NOT NULL,
  `idAlbum` INT NOT NULL,
  `songPath` VARCHAR(45) NOT NULL,
  `creator` INT NOT NULL,
  `price` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Song_Gender1_idx` (`idGender` ASC) VISIBLE,
  INDEX `fk_Song_Compitor1_idx` (`idCompositor` ASC) VISIBLE,
  INDEX `fk_Song_Artist1_idx` (`idArtist` ASC) VISIBLE,
  INDEX `fk_Song_Album1_idx` (`idAlbum` ASC) VISIBLE,
  INDEX `fk_Song_User1_idx` (`creator` ASC) VISIBLE,
  CONSTRAINT `fk_Song_Gender1`
    FOREIGN KEY (`idGender`)
    REFERENCES `Music`.`Gender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_Compitor1`
    FOREIGN KEY (`idCompositor`)
    REFERENCES `Music`.`Compositor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_Artist1`
    FOREIGN KEY (`idArtist`)
    REFERENCES `Music`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_Album1`
    FOREIGN KEY (`idAlbum`)
    REFERENCES `Music`.`Album` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Song_User1`
    FOREIGN KEY (`creator`)
    REFERENCES `Music`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`ReproductionList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`ReproductionList` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `create` DATE NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `score` DOUBLE NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ReproductionList_User1_idx` (`idUser` ASC) VISIBLE,
  CONSTRAINT `fk_ReproductionList_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `Music`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`ReproductionListSong`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`ReproductionListSong` (
  `idReproductionList` INT NOT NULL,
  `idSong` INT NOT NULL,
  PRIMARY KEY (`idReproductionList`, `idSong`),
  INDEX `fk_ReproductionList_has_Song_Song1_idx` (`idSong` ASC) VISIBLE,
  INDEX `fk_ReproductionList_has_Song_ReproductionList1_idx` (`idReproductionList` ASC) VISIBLE,
  CONSTRAINT `fk_ReproductionList_has_Song_ReproductionList1`
    FOREIGN KEY (`idReproductionList`)
    REFERENCES `Music`.`ReproductionList` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReproductionList_has_Song_Song1`
    FOREIGN KEY (`idSong`)
    REFERENCES `Music`.`Song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`AlbumArtist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`AlbumArtist` (
  `idAlbum` INT NOT NULL,
  `idArtist` INT NOT NULL,
  PRIMARY KEY (`idAlbum`, `idArtist`),
  INDEX `fk_Album_has_Artist_Artist1_idx` (`idArtist` ASC) VISIBLE,
  INDEX `fk_Album_has_Artist_Album1_idx` (`idAlbum` ASC) VISIBLE,
  CONSTRAINT `fk_Album_has_Artist_Album1`
    FOREIGN KEY (`idAlbum`)
    REFERENCES `Music`.`Album` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Album_has_Artist_Artist1`
    FOREIGN KEY (`idArtist`)
    REFERENCES `Music`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`GenderCompositor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`GenderCompositor` (
  `idGender` INT NOT NULL,
  `idCompositor` INT NOT NULL,
  PRIMARY KEY (`idGender`, `idCompositor`),
  INDEX `fk_Gender_has_Compitor_Compitor1_idx` (`idCompositor` ASC) VISIBLE,
  INDEX `fk_Gender_has_Compitor_Gender1_idx` (`idGender` ASC) VISIBLE,
  CONSTRAINT `fk_Gender_has_Compitor_Gender1`
    FOREIGN KEY (`idGender`)
    REFERENCES `Music`.`Gender` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Gender_has_Compitor_Compitor1`
    FOREIGN KEY (`idCompositor`)
    REFERENCES `Music`.`Compositor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Catalog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Catalog` (
  `idUser` INT NOT NULL,
  `idSong` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idSong`),
  INDEX `fk_User_has_Song_Song1_idx` (`idSong` ASC) VISIBLE,
  INDEX `fk_User_has_Song_User1_idx` (`idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Song_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `Music`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Song_Song1`
    FOREIGN KEY (`idSong`)
    REFERENCES `Music`.`Song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Music`.`Logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Music`.`Logs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
